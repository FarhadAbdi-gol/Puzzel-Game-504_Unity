using RTLTMPro;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using UnityEngine.UI;
using CodeStage.AntiCheat.ObscuredTypes;
using CodeStage.AntiCheat.Storage;

public class JorchinControler : MonoBehaviour
{
    #region public Variables

    public RTLTextMeshPro TextCode, TextMean, Text_Timer;
    public InputField TextWord;
    
    public AudioClip StartSet, TimeOut;
    public AudioSource audioSource;

    public GameObject SetTextButton, StartGameButton;
    public GameObject WordJorchin, CodeJorchin, MeanJorchin, GamePlay, Table, ResultPanel, RepeatPanel;
    public GameObject[] PanelOpenLevel;
    public GameObject[] PanelLock;

    public Button BackButton;
    public Button[] ButtonsLevels;
    public GameObject ButtonNextLevel;
    public RTLTextMeshPro Text_Levels1;
    public RTLTextMeshPro Text_Levels2;
 
    public RTLTextMeshPro[] TextDictTrueRTL = new RTLTextMeshPro[21];
    public RTLTextMeshPro[] TextDictFalseRTL = new RTLTextMeshPro[21];
    public Text[] Text_Scores = new Text[21];
    public Text[] Text_DictTrue = new Text[21];
    public Text[] Text_DictFalse = new Text[21];
    public Text[] Text_Score = new Text[21];
    public Text[] Text_DictRandomCount= new Text[21];

    public Dictionary<int, string>[] DictRandom = new Dictionary<int, string>[21];
    public Dictionary<int, string>[] DictTrue = new Dictionary<int, string>[21];
    public Dictionary<int, string>[] DictFalse = new Dictionary<int, string>[21];

    public Dictionary<int, string> WordDic = new Dictionary<int, string>()
         {
        {0, "abandon" },
        {1, "keen" },
        {2, "jealous" },
        {3, "tact" },
        {4, "oath" },
        {5, "vacant" },
        {6, "hardship" },
        {7, "gallant" },
        {8, "data" },
        {9, "unaccustomed" },
        {10, "bachelor" },
        {11, "qualify" },
        {12 , "corpse" },
        {13 , "conceal" },
        {14 , "dismal" },
        {15 , "frigid" },
        {16 , "inhabit" },
        {17 , "numb" },
        {18 , "peril" },
        {19 , "recline" },
        {20 , "shriek" },
        {21 , "sinister" },
        {22 , "tempt" },
        {23 , "wager" },
          {24 , "typical" },
        {25 , "minimum" },
        {26 , "scarce" },
        {27 , "annual" },
        {28 , "persuade" },
        {29 , "essential" },
        {30 , "blend" },
        {31 , "visible" },
        {32 , "expensive" },
        {33 , "talent" },
        {34 , "devise" },
        {35 , "wholesale" },
          {36 , "vapor" },
        {37 , "eliminate" },
        {38 , "villain" },
        {39 , "dense" },
        {40 , "utilize" },
        {41 , "humid" },
        {42 , "theory" },
        {43 , "descend" },
        {44 , "circulate" },
        {45 , "enormous" },
        {46 , "predict" },
        {47 , "vanish" },
          {48 , "tradition" },
        {49 , "Rural" },
        {50 , "burden" },
        {51 , "campus" },
        {52 , "majority" },
        {53 , "assemble" },
        {54 , "explore" },
        {55 , "topic" },
        {56 , "debate" },
        {57 , "evade" },
        {58 , "probe" },
        {59 , "reform" },
          {60 , "approach" },
        {61 , "detect" },
        {62 , "defect" },
        {63 , "employee" },
        {64 , "neglect" },
        {65 , "deceive" },
        {66 , "undoubtedly" },
        {67 , "popular" },
        {68 , "thorough" },
        {69 , "client" },
        {70 , "comprehensive" },
        {71 , "defraud" },
          {72 , "Postpone" },
        {73 , "consent" },
        {74 , "massive" },
        {75 , "capsule" },
        {76 , "preserve" },
        {77 , "denounce" },
        {78 , "unique" },
        {79 , "torrent" },
        {80 , "resent" },
        {81 , "molest" },
        {82 , "gloomy" },
        {83 , "unforeseen" },
          {84 , "exaggerate" },
        {85 , "amateur" },
        {86 , "mediocre" },
        {87 , "variety" },
        {88 , "valid" },
        {89 , "survive" },
        {90 , "weird" },
        {91 , "prominent" },
        {92 , "security" },
        {93 , "bulky" },
        {94 , "reluctant" },
        {95 , "obvious" },
          {96 , "vicinity" },
        {97 , "century" },
        {98 , "rage" },
        {99 , "document" },
        {100 , "conclude" },
        {101 , "undeniable" },
        {102 , "resist" },
        {103 , "lack" },
        {104 , "ignore" },
        {105 , "challenge" },
        {106 , "miniature" },
        {107 , "source" },
          {108 , "excel" },
        {109 , "feminine" },
        {110 , "mount" },
        {111 , "compete" },
        {112 , "dread" },
        {113 , "masculine" },
        {114 , "menace" },
        {115 , "tendency" },
        {116 , "underestimate" },
        {117 , "victorious" },
        {118 , "numerous" },
        {119 , "flexible" },
          {120 , "evidence" },
        {121 , "solitary" },
        {122 , "vision" },
        {123 , "frequent" },
        {124 , "glimpse" },
        {125 , "recent" },
        {126 , "decade" },
        {127 , "hesitate" },
        {128 , "absurd" },
        {129 , "conflict" },
        {130 , "minority" },
        {131 , "fiction" },
          {132 , "ignite" },
        {133 , "abolish" },
        {134 , "urban" },
        {135 , "population" },
        {136 , "frank" },
        {137 , "pollute" },
        {138 , "reveal" },
        {139 , "prohibit" },
        {140 , "urgent" },
        {141 , "adequate" },
        {142 , "decrease" },
        {143 , "audible" },
          {144 , "famine" },
        {145 , "editor" },
        {146 , "revive" },
        {147 , "journalist" },
        {148 , "commence" },
        {149 , "gleam" },
        {150 , "hazy" },
        {151 , "persist" },
        {152 , "vessel" },
        {153 , "observant" },
        {154 , "migrate" },
        {155 , "identify" },
          {156 , "bewildered" },
        {157 , "brawl" },
        {158 , "brutal" },
        {159 , "duplicate" },
        {160 , "opponent" },
        {161 , "rival" },
        {162 , "thrust" },
        {163 , "underdog" },
        {164 , "unruly" },
        {165 , "vicious" },
        {166 , "violent" },
        {167 , "whirling" },
          {168 , "alter" },
        {169 , "casual" },
        {170 , "expand" },
        {171 , "fortunate" },
        {172 , "innovative" },
        {173 , "mature" },
        {174 , "pioneer" },
        {175 , "pledge" },
        {176 , "pursue" },
        {177 , "revise" },
        {178 , "sacred" },
        {179 , "unanimous" },
          {180 , "slender" },
        {181 , "surpass" },
        {182 , "vast" },
        {183 , "doubt" },
        {184 , "capacity" },
        {185 , "penetrate" },
        {186 , "pierce" },
        {187 , "accurate" },
        {188 , "microscope" },
        {189 , "grateful" },
        {190 , "cautious" },
        {191 , "confident" },
          {192 , "appeal" },
        {193 , "addict" },
        {194 , "wary" },
        {195 , "aware" },
        {196 , "misfortune" },
        {197 , "avoid" },
        {198 , "wretched" },
        {199 , "keg" },
        {200 , "nourish" },
        {201 , "harsh" },
        {202 , "quantity" },
        {203 , "opt" },
          {204 , "tragedy" },
        {205 , "pedestrian" },
        {206 , "glance" },
        {207 , "budget" },
        {208 , "nimble" },
        {209 , "manipulate" },
        {210 , "reckless" },
        {211 , "horrid" },
        {212 , "rave" },
        {213 , "economical" },
        {214 , "lubricate" },
        {215 , "ingenious" },
          {216 , "harvest" },
        {217 , "abundant" },
        {218 , "uneasy" },
        {219 , "calculate" },
        {220 , "absorb" },
        {221 , "estimate" },
        {222 , "morsel" },
        {223 , "quota" },
        {224 , "threat" },
        {225 , "ban" },
        {226 , "panic" },
        {227 , "appropriate" },
          {228 , "emerge" },
        {229 , "jagged" },
        {230 , "linger" },
        {231 , "ambush" },
        {232 , "crafty" },
        {233 , "defiant" },
        {234 , "vigor" },
        {235 , "perish" },
        {236 , "fragile" },
        {237 , "captive" },
        {238 , "prosper" },
        {239 , "devour" },
          {240 , "plea" },
        {241 , "weary" },
        {242 , "collide" },
        {243 , "confirm" },
        {244 , "verify" },
        {245 , "anticipate" },
        {246 , "dilemma" },
        {247 , "detour" },
        {248 , "merit" },
        {249 , "transmit" },
        {250 , "relieve" },
        {251 , "baffle" },
          {252 , "warden" },
        {253 , "acknowledge" },
        {254 , "justice" },
        {255 , "delinquent" },
        {256 , "deprive" },
        {257 , "spouse" },
        {258 , "vocation" },
        {259 , "unstable" },
        {260 , "homicide" },
        {261 , "penalize" },
        {262 , "beneficiary" },
        {263 , "reject" },
          {264 , "reptile" },
        {265 , "rarely" },
        {266 , "exhibit" },
        {267 , "proceed" },
        {268 , "precaution" },
        {269 , "extract" },
        {270 , "prior" },
        {271 , "embrace" },
        {272 , "valiant" },
        {273 , "partial" },
        {274 , "forbid" },
        {275 , "logical" },
          {276 , "fierce" },
        {277 , "detest" },
        {278 , "sneer" },
        {279 , "scowl" },
        {280 , "encourage" },
        {281 , "consider" },
        {282 , "vermin" },
        {283 , "wail" },
        {284 , "symbol" },
        {285 , "authority" },
        {286 , "neutral" },
        {287 , "trifle" },
          {288 , "matrimony" },
        {289 , "baggage" },
        {290 , "squander" },
        {291 , "abroad" },
        {292 , "fugitive" },
        {293 , "calamity" },
        {294 , "pauper" },
        {295 , "envy" },
        {296 , "prosecute" },
        {297 , "bigamy" },
        {298 , "collapse" },
        {299 , "architect" },
          {300 , "possible" },
        {301 , "compel" },
        {302 , "awkward" },
        {303 , "venture" },
        {304 , "awesome" },
        {305 , "guide" },
        {306 , "quench" },
        {307 , "betray" },
        {308 , "utter" },
        {309 , "pacify" },
        {310 , "respond" },
        {311 , "beckon" },
          {312 , "despite" },
        {313 , "disrupt" },
        {314 , "rash" },
        {315 , "rapid" },
        {316 , "exhaust" },
        {317 , "severity" },
        {318 , "feeble" },
        {319 , "unite" },
        {320 , "cease" },
        {321 , "thrifty" },
        {322 , "miserly" },
        {323 , "monarch" },
          {324 , "outlaw" },
        {325 , "promote" },
        {326 , "undernourished" },
        {327 , "illustrate" },
        {328 , "disclose" },
        {329 , "excessive" },
        {330 , "disaster" },
        {331 , "censor" },
        {332 , "culprit" },
        {333 , "juvenile" },
        {334 , "bait" },
        {335 , "insist" },
          {336 , "toil" },
        {337 , "blunder" },
        {338 , "daze" },
        {339 , "mourn" },
        {340 , "subside" },
        {341 , "maim" },
        {342 , "comprehend" },
        {343 , "commend" },
        {344 , "final" },
        {345 , "exempt" },
        {346 , "vain" },
        {347 , "repetition" },
          {348 , "depict" },
        {349 , "mortal" },
        {350 , "novel" },
        {351 , "occupant" },
        {352 , "appoint" },
        {353 , "quarter" },
        {354 , "site" },
        {355 , "quote" },
        {356 , "verse" },
        {357 , "morality" },
        {358 , "roam" },
        {359 , "attract" },
          {360 , "commuter" },
        {361 , "confine" },
        {362 , "idle" },
        {363 , "idol" },
        {364 , "jest" },
        {365 , "patriotic" },
        {366 , "dispute" },
        {367 , "valor" },
        {368 , "lunatic" },
        {369 , "vein" },
        {370 , "uneventful" },
        {371 , "fertile" },
          {372 , "refer" },
        {373 , "distress" },
        {374 , "diminish" },
        {375 , "maximum" },
        {376 , "flee" },
        {377 , "vulnerable" },
        {378 , "signify" },
        {379 , "mythology" },
        {380 , "colleague" },
        {381 , "torment" },
        {382 , "provide" },
        {383 , "loyalty" },
          {384 , "volunteer" },
        {385 , "prejudice" },
        {386 , "shrill" },
        {387 , "jolly" },
        {388 , "witty" },
        {389 , "hinder" },
        {390 , "lecture" },
        {391 , "abuse" },
        {392 , "mumble" },
        {393 , "mute" },
        {394 , "wad" },
        {395 , "retain" },
          {396 , "candidate" },
        {397 , "precede" },
        {398 , "adolescent" },
        {399 , "coeducational" },
        {400 , "radical" },
        {401 , "spontaneous" },
        {402 , "skim" },
        {403 , "vaccinate" },
        {404 , "untidy" },
        {405 , "utensil" },
        {406 , "sensitive" },
        {407 , "temperate" },
          {408 , "vague" },
        {409 , "elevate" },
        {410 , "lottery" },
        {411 , "finance" },
        {412 , "obtain" },
        {413 , "cinema" },
        {414 , "event" },
        {415 , "discard" },
        {416 , "soar" },
        {417 , "subsequent" },
        {418 , "relate" },
        {419 , "stationary" },
          {420 , "prompt" },
        {421 , "hasty" },
        {422 , "scorch" },
        {423 , "tempest" },
        {424 , "soothe" },
        {425 , "sympathetic" },
        {426 , "redeem" },
        {427 , "resume" },
        {428 , "harmony" },
        {429 , "refrain" },
        {430 , "illegal" },
        {431 , "narcotic" },
          {432 , "heir" },
        {433 , "majestic" },
        {434 , "dwindle" },
        {435 , "surplus" },
        {436 , "traitor" },
        {437 , "deliberate" },
        {438 , "vandal" },
        {439 , "drought" },
        {440 , "abide" },
        {441 , "unify" },
        {442 , "summit" },
        {443 , "heed" },
          {444 , "biography" },
        {445 , "drench" },
        {446 , "swarm" },
        {447 , "wobble" },
        {448 , "tumult" },
        {449 , "kneel" },
        {450 , "dejected" },
        {451 , "obedient" },
        {452 , "recede" },
        {453 , "tyrant" },
        {454 , "charity" },
        {455 , "verdict" },
          {456 , "unearth" },
        {457 , "depart" },
        {458 , "coincide" },
        {459 , "cancel" },
        {460 , "debtor" },
        {461 , "legible" },
        {462 , "placard" },
        {463 , "contagious" },
        {464 , "clergy" },
        {465 , "customary" },
        {466 , "transparent" },
        {467 , "scald" },
          {468 , "epidemic" },
        {469 , "obesity" },
        {470 , "magnify" },
        {471 , "chiropractor" },
        {472 , "obstacle" },
        {473 , "ventilate" },
        {474 , "jeopardize" },
        {475 , "negative" },
        {476 , "pension" },
        {477 , "vital" },
        {478 , "municipal" },
        {479 , "oral" },
          {480 , "complacent" },
        {481 , "wasp" },
        {482 , "rehabilitate" },
        {483 , "parole" },
        {484 , "vertical" },
        {485 , "multitude" },
        {486 , "nominate" },
        {487 , "potential" },
        {488 , "morgue" },
        {489 , "preoccupied" },
        {490 , "upholstery" },
        {491 , "indifference" },
          {492 , "maintain" },
        {493 , "snub" },
        {494 , "endure" },
        {495 , "wrath" },
        {496 , "expose" },
        {497 , "legend" },
        {498 , "ponder" },
        {499 , "resign" },
        {500 , "drastic" },
        {501 , "wharf" },
        {502 , "amend" },
        {503 , "ballot" },
        };
    public Dictionary<int, string> MeanDic = new Dictionary<int, string>()
         {
        {0, "ترک کردن" },
        {1, "حساس" },
        {2, "حسود" },
        {3, "مهارت" },
        {4, "سوگند" },
        {5, "خالی" },
        {6, "سختی" },
        {7, "شجاع" },
        {8, "اطلاعات" },
        {9, "غیرعادی" },
        {10, "مجرد" },
        {11, "تعیین کردن" },
                {12 , "جسد" },
        {13 , "پنهان کردن" },
        {14 , "پریشان کننده" },
        {15 , "منجمد" },
        {16 , "ساکن شدن" },
        {17 , "بی حس" },
        {18 , "خطر" },
        {19 , "دراز کشیدن" },
        {20 , "فریاد" },
        {21 , "گمراه کننده" },
        {22 , "هوس کردن" },
        {23 , "شرط بندی" },
          {24 , "نوع" },
        {25 , "کمترین" },
        {26 , "کمیاب" },
        {27 , "یکساله" },
        {28 , "قانع کردن" },
        {29 , "ضروری" },
        {30 , "ترکیب" },
        {31 , "دیدنی" },
        {32 , "گران" },
        {33 , "توانایی" },
        {34 , "اختراع" },
        {35 , "عمده فروشی" },
          {36 , "بخار" },
        {37 , "حذف کردن" },
        {38 , "بد ذات" },
        {39 , "چگالی" },
        {40 , "استفاده کردن" },
        {41 , "خیس" },
        {42 , "فرضیه" },
        {43 , "پایین آمدن" },
        {44 , "گردش درآوردن" },
        {45 , "بزرگ" },
        {46 , "پیش بینی کردن" },
        {47 , "ناپدید شدن" },
          {48 , "آداب و رسوم" },
        {49 , "روستایی رعیت" },
        {50 , "بار" },
        {51 , "فضای باز" },
        {52 , "اکثریت" },
        {53 , "گرد آمدن" },
        {54 , "کاوش کردن" },
        {55 , "موضوع" },
        {56 , "بحث" },
        {57 , "طفره رفتن" },
        {58 , "جستوجو کردن" },
        {59 , "اصلاح کردن" },
          {60 , "نزدیک شدن" },
        {61 , "کشف کردن" },
        {62 , "کاستی" },
        {63 , "مستخدم" },
        {64 , "غفلت کردن" },
        {65 , "گول زدن" },
        {66 , "بدون شک" },
        {67 , "معروف" },
        {68 , "کامل" },
        {69 , "مشتری" },
        {70 , "همه" },
        {71 , "کلاهبرداری کردن" },
          {72 , "تاخیر انداختن" },
        {73 , "اجازه دادن" },
        {74 , "بزرگ" },
        {75 , "پوشش خود کپسول" },
        {76 , "سالم نگه داشتن" },
        {77 , "سرزنش کردن" },
        {78 , "بی همتا" },
        {79 , "سیلاب" },
        {80 , "عصبانی شدن" },
        {81 , "اذیت کردن" },
        {82 , "دلگیر" },
        {83 , "پیش بینی نشده" },
          {84 , "مبالغه آمیز" },
        {85 , "آماتور" },
        {86 , "متوسط" },
        {87 , "انواع و اقسام" },
        {88 , "درست" },
        {89 , "زنده ماندن" },
        {90 , "عجیب" },
        {91 , "مهم" },
        {92 , "امنیت" },
        {93 , "بزرگ" },
        {94 , "بی میل" },
        {95 , "واضح" },
          {96 , "مجاورت" },
        {97 , "قرن" },
        {98 , "عصبانی" },
        {99 , "سند و مدرک" },
        {100 , "تمام شدن" },
        {101 , "غیرقابل انکار" },
        {102 , "مقاومت کردن" },
        {103 , "نبودن" },
        {104 , "نادیده گرفتن" },
        {105 , "به مبارزه طلبیدن" },
        {106 , "کوچک" },
        {107 , "منبع" },
          {108 , "برتری داشتن" },
        {109 , "زنان" },
        {110 , "سوار شدن" },
        {111 , "رقابت کردن" },
        {112 , "ترس" },
        {113 , "مردانه" },
        {114 , "تهدید" },
        {115 , "علاقه" },
        {116 , "دست کم گرفتن" },
        {117 , "پیروز" },
        {118 , "بزرگ" },
        {119 , "قابل انعطاف" },
          {120 , "شاهدومدرک جمع کردن" },
        {121 , "گوشه نشین" },
        {122 , "قدرت دید" },
        {123 , "فراوان" },
        {124 , "نگاه گذرا" },
        {125 , "گفته های خود را تکذیب کردن" },
        {126 , "ده ساله" },
        {127 , "دو دل بودن" },
        {128 , "بی منطقی" },
        {129 , "درگیری" },
        {130 , "کمترین" },
        {131 , "بی اساس" },
          {132 , "آتش زدن" },
        {133 , "منسوخ شدن" },
        {134 , "اهل شهر" },
        {135 , "جمعیت" },
        {136 , "صادق" },
        {137 , "آلوده کردن" },
        {138 , "فاش کردن" },
        {139 , "تحریم" },
        {140 , "ضروری" },
        {141 , "کافی" },
        {142 , "کاهش" },
        {143 , "شنیدن" },
          {144 , "کمیابی" },
        {145 , "ویرایشگر" },
        {146 , "زنده شدن" },
        {147 , "روزنامه نگار" },
        {148 , "شروع کردن" },
        {149 , "سوسو زدن" },
        {150 , "مبهم" },
        {151 , "پافشاری" },
        {152 , "مجرا" },
        {153 , "هوشیار" },
        {154 , "مهاجرت کردن" },
        {155 , "شناسایی کردن" },
          {156 , "سردرگم کردن" },
        {157 , "جنجال" },
        {158 , "بی رحم" },
        {159 , "تکراری" },
        {160 , "مخالف" },
        {161 , "حریف" },
        {162 , "پرت کردن" },
        {163 , "سگ شکست خورده" },
        {164 , "یاغی" },
        {165 , "تبهکار" },
        {166 , "شدیدوقوی" },
        {167 , "چرخیدن" },
          {168 , "تغییر دادن" },
        {169 , "اتفاقی" },
        {170 , "گسترش یافتن" },
        {171 , "خوشحال" },
        {172 , "نوآور" },
        {173 , "رشد کردن" },
        {174 , "پیش قدم" },
        {175 , "گروگان گرفتن" },
        {176 , "تعقیب کردن" },
        {177 , "اصلاح کردن" },
        {178 , "خاص" },
        {179 , "همدل و یکسو" },
          {180 , "باریک و ضعیف" },
        {181 , "فراتر رفتن" },
        {182 , "پهناورترین" },
        {183 , "شک و شبهه" },
        {184 , "ظرفیت و گنجایش" },
        {185 , "داخل کردن" },
        {186 , "سوراخ کردن" },
        {187 , "دقت" },
        {188 , "ذره بین" },
        {189 , "سپاسگذاری" },
        {190 , "هوشیار و مراقب" },
        {191 , "مطمئن و دلگرم" },
          {192 , "درخواست" },
        {193 , "اعتیاد" },
        {194 , "احتیاط" },
        {195 , "آگاه" },
        {196 , "بدشانس" },
        {197 , "اجتناب کردن" },
        {198 , "بدبخت" },
        {199 , "چیز ناقابل" },
        {200 , "قوت دادن" },
        {201 , "درشت و لاغر" },
        {202 , "کمیت را معلوم کردن" },
        {203 , "انتخاب کردن" },
          {204 , "نمایش حزن انگیز" },
        {205 , "پیاده" },
        {206 , "نگاه سریع" },
        {207 , "بودجه" },
        {208 , "زرنگ" },
        {209 , "اداره کردن" },
        {210 , "بی پروا" },
        {211 , "وحشتناک" },
        {212 , "دیوانه شدن" },
        {213 , "مقرون به صرفه" },
        {214 , "لیز کردن" },
        {215 , "مخترع" },
          {216 , "نتیجه" },
        {217 , "بسیار" },
        {218 , "مضطرب و پریشان" },
        {219 , "حساب کردن" },
        {220 , "جذب کردن" },
        {221 , "ارزیابی کردن" },
        {222 , "یک لقمه غذا" },
        {223 , "سهم" },
        {224 , "تهدید" },
        {225 , "قدغن" },
        {226 , "وحشت" },
        {227 , "اختصاص دادن" },
          {228 , "پدیدار شدن" },
        {229 , "دندانه دار" },
        {230 , "درنگ کردن" },
        {231 , "کمین کردن" },
        {232 , "حیله گر" },
        {233 , "جسور و مبارز" },
        {234 , "قدرت" },
        {235 , "هلاک شدن" },
        {236 , "شکننده" },
        {237 , "گرفتار" },
        {238 , "پریشان کننده" },
        {239 , "بلعیدن" },
          {240 , "درخواست" },
        {241 , "خسته و بیزار" },
        {242 , "بهم خوردن" },
        {243 , "تایید کردن" },
        {244 , "وارسی کردن" },
        {245 , "پیش بینی کردن" },
        {246 , "وضعیت دشوار" },
        {247 , "انحراف" },
        {248 , "سزاوار" },
        {249 , "انتقال دادن" },
        {250 , "تسکین" },
        {251 , "گمراه کردن" },
          {252 , "نگهبان" },
        {253 , "تایید کردن" },
        {254 , "عدالت" },
        {255 , "مرتکب جنایت" },
        {256 , "محروم کردن" },
        {257 , "همسر" },
        {258 , "کسب و کار" },
        {259 , "لرزان" },
        {260 , "قتل" },
        {261 , "تاوان" },
        {262 , "بهره بردار" },
        {263 , "رد کردن" },
          {264 , "حیوان خزنده" },
        {265 , "به ندرت" },
        {266 , "در معرض نمایش گذاشتن" },
        {267 , "پیش رفتن" },
        {268 , "احتیاط کردن" },
        {269 , "استخراج کردن" },
        {270 , "پیشتاز" },
        {271 , "در آغوش گرفتن" },
        {272 , "شجاع" },
        {273 , "طرفدار" },
        {274 , "ممنوع کردن" },
        {275 , "منطقی" },
          {276 , "حریص" },
        {277 , "بیزار بودن" },
        {278 , "تمسخر" },
        {279 , "ترش رویی" },
        {280 , "تشویق کردن" },
        {281 , "تفکر کردن" },
        {282 , "آفت" },
        {283 , "ناله و شیون" },
        {284 , "نشانه و علامت" },
        {285 , "اجازه" },
        {286 , "خنثی" },
        {287 , "ناچیز" },
          {288 , "ازدواج" },
        {289 , "بار سفر" },
        {290 , "ولخرج" },
        {291 , "خارج" },
        {292 , "تبعیدی" },
        {293 , "بلا و مصیبت" },
        {294 , "گدا" },
        {295 , "حسادت" },
        {296 , "تحت تعقیب" },
        {297 , "دو زن داری" },
        {298 , "متلاشی شدن" },
        {299 , "معمار" },
          {300 , "امکان دارد" },
        {301 , "وادار کردن" },
        {302 , "ناشی و بی  دست و پا" },
        {303 , "جرات" },
        {304 , "وحشت آور" },
        {305 , "راهنمایی" },
        {306 , "دفع کردن" },
        {307 , "خیانت کردن" },
        {308 , "به زبان آوردن" },
        {309 , "آرام کردن" },
        {310 , "واکنش نشان دادن" },
        {311 , "اشاره کردن با دست و صدا زدن" },
          {312 , "با اینکه" },
        {313 , "مختل کردن" },
        {314 , "بی پروا" },
        {315 , "سریع و تند" },
        {316 , "خسته کردن" },
        {317 , "سختی" },
        {318 , "کم زور" },
        {319 , "متحد کردن" },
        {320 , "دست کشیدن" },
        {321 , "صرفه جویی" },
        {322 , "خسیس" },
        {323 , "ملکه" },
          {324 , "قانون شکن" },
        {325 , "ترفیع دادن" },
        {326 , "سوء تغذیه" },
        {327 , "نشان دادن" },
        {328 , "فاش کردن" },
        {329 , "بیش از اندازه" },
        {330 , "بلا و مصیبت" },
        {331 , "سانسور کردن" },
        {332 , "خطاکار" },
        {333 , "جوان" },
        {334 , "خوراک دادن" },
        {335 , "اصرار کردن" },
          {336 , "رنج" },
        {337 , "اشتباه یزرگ" },
        {338 , "مبهوت" },
        {339 , "گریه کردن" },
        {340 , "پایین آمدن" },
        {341 , "صدمه زدن" },
        {342 , "دریافتن" },
        {343 , "ستایش کردن" },
        {344 , "تعیین کننده" },
        {345 , "معاف کردن" },
        {346 , "بیهوده" },
        {347 , "تکرار" },
          {348 , "نمایش دادن به وسیله طرح ونقشه" },
        {349 , "فانی" },
        {350 , "جدید" },
        {351 , "مستاجر" },
        {352 , "انتخاب کردن" },
        {353 , "یک چهارم" },
        {354 , "موقعیت" },
        {355 , "ایراد گرفتن" },
        {356 , "به نظم درآوردن" },
        {357 , "اخلاق" },
        {358 , "پرسه زدن" },
        {359 , "جذب کردن" },
          {360 , "رفت و آمد" },
        {361 , "محدود کردن" },
        {362 , "تنبل و بیکار" },
        {363 , "بت" },
        {364 , "مسخره" },
        {365 , "میهن پرستی" },
        {366 , "بحث" },
        {367 , "شجاع" },
        {368 , "دیوانه" },
        {369 , "خلق و خو" },
        {370 , "بی تفاوت" },
        {371 , "با برکت" },
          {372 , "مراجعه کردن" },
        {373 , "ناراحتی" },
        {374 , "کم شدن" },
        {375 , "حداکثر" },
        {376 , "متواری شدن" },
        {377 , "آسیب پذیر" },
        {378 , "نشان دادن" },
        {379 , "افسانه" },
        {380 , "همراه" },
        {381 , "شکنجه" },
        {382 , "آماده کردن" },
        {383 , "وفادار" },
          {384 , "داوطلب" },
        {385 , "تبعیض کردن" },
        {386 , "گوشخراش" },
        {387 , "سرزنده" },
        {388 , "شوخ طبع" },
        {389 , "به تاخیر انداختن" },
        {390 , "سخنرانی کردن" },
        {391 , "سوءاستفاده کردن" },
        {392 , "مسخره کردن" },
        {393 , "ساکت" },
        {394 , "توده" },
        {395 , "حفظ کردن" },
          {396 , "داوطلب" },
        {397 , "جلوتر بودن" },
        {398 , "بزرگسال" },
        {399 , "مختلط" },
        {400 , "افراطی" },
        {401 , "بطور طبیعی" },
        {402 , "تماس اندک" },
        {403 , "واکسینه کردن" },
        {404 , "ناخوشایند" },
        {405 , "وسایل" },
        {406 , "حساس" },
        {407 , "معتدل" },
          {408 , "نامشخص و مبهم" },
        {409 , "بالا بردن" },
        {410 , "قرعه کشی" },
        {411 , "سرمایه گذاری" },
        {412 , "فراهم کردن" },
        {413 , "تصویر متحرک" },
        {414 , "حادثه" },
        {415 , "ول کردن" },
        {416 , "بلند پروازی" },
        {417 , "ما بعد" },
        {418 , "گفتن" },
        {419 , "بی حرکت" },
          {420 , "سریع و فوری" },
        {421 , "سریع و عجول" },
        {422 , "بو دادن" },
        {423 , "آشفتگی" },
        {424 , "آرام کردن" },
        {425 , "همدرد" },
        {426 , "جبران کردن" },
        {427 , "ادامه دادن" },
        {428 , "هماهنگی" },
        {429 , "خودداری کردن" },
        {430 , "خلاف قانون" },
        {431 , "مخدر" },
          {432 , "وارث" },
        {433 , "با شکوه" },
        {434 , "تحلیل رفتن" },
        {435 , "مازاد" },
        {436 , "خیانتکار" },
        {437 , "حساب شده" },
        {438 , "خرابکار" },
        {439 , "خشکسالی" },
        {440 , "تحمل کردن" },
        {441 , "متحد ساختن" },
        {442 , "بالاترین نقطه" },
        {443 , "توجه" },
          {444 , "زندگی نامه" },
        {445 , "آب دادن" },
        {446 , "گروه" },
        {447 , "تکان خوردن" },
        {448 , "آشفتگی" },
        {449 , "زانو زدن" },
        {450 , "غمگین" },
        {451 , "مطیع" },
        {452 , "عقب نشینی کردن" },
        {453 , "حاکم ستمگر" },
        {454 , "گذشت" },
        {455 , "حکم" },
          {456 , "پی بردن" },
        {457 , "دور شدن" },
        {458 , "مصادف شدن" },
        {459 , "خنثی کردن" },
        {460 , "مدیون" },
        {461 , "روشن و خوانا" },
        {462 , "پوستر" },
        {463 , "واگیردار" },
        {464 , "روحانی" },
        {465 , "عادی" },
        {466 , "پیدا" },
        {467 , "با بخارداغ سوزاندن" },
          {468 , "همه گیر" },
        {469 , "چاقی مفرط" },
        {470 , "بزرگنمایی" },
        {471 , "طبیب مفصل" },
        {472 , "گیر" },
        {473 , "تهویه کردن" },
        {474 , "به خطر انداختن" },
        {475 , "منفی" },
        {476 , "حقوق بازنشستگی" },
        {477 , "ضروری" },
        {478 , "شهری" },
        {479 , "زبانی" },
          {480 , "از خود راضی نباش" },
        {481 , "زنبور" },
        {482 , "احیا کردن" },
        {483 , "آزادی موقت" },
        {484 , "عمودی" },
        {485 , "تعداد زیاد" },
        {486 , "نامزد کردن" },
        {487 , "توانایی" },
        {488 , "سردخانه" },
        {489 , "دل مشغول" },
        {490 , "اثاث" },
        {491 , "بی توجه" },
          {492 , "حمایت" },
        {493 , "سرزنش کردن" },
        {494 , "متحمل شدن" },
        {495 , "خشم" },
        {496 , "نمایش دادن" },
        {497 , "داستان" },
        {498 , "اندیشیدن" },
        {499 , "واگذار کردن" },
        {500 , "شدید" },
        {501 , "اسکله" },
        {502 , "تغییر دادن" },
        {503 , "رای" }
         };
    public Dictionary<int, string> CodeDic = new Dictionary<int, string>()
        {
        {0, "آبادان" },
        {1, "کینه ای" },
        {2, "ژله داشت" },
        {3, "تک تیرانداز" },
        {4, "استاد" },
        {5, "و کانتینر" },
        {6, "هر شیب" },
        {7, "گیلانی" },
        {8, "ده تا" },
        {9, "آن عکاس امید" },
        {10, "بچه لر" },
        {11, "کجا را علی فرمانده" },
                {12 , "کور مثل" },
        {13 , "که آن سیل" },
        {14 , "دستمال" },
        {15 , "فریزر" },
        {16 , "این ها بیت" },
        {17 , "نامه بر" },
        {18 , "پریل" },
        {19 , "روی یک لاین" },
        {20 , "شریک" },
        {21 , "سینی ستاره دار" },
        {22 , "تمپیت" },
        {23 , "واگیر" },
          {24 , "تیپ کلی" },
        {25 , "مینیمم" },
        {26 , "اسکار" },
        {27 , "دندان وال" },
        {28 , "پر سود" },
        {29 , "اصلا شال" },
        {30 , "بلند" },
        {31 , "وسط سیبل" },
        {32 , "عکس پنس دار" },
        {33 , "تا لنت" },
        {34 , "دیواری" },
        {35 , "کل سال" },
          {36 , "وافور" },
        {37 , "الی مینا" },
        {38 , "ویلای این ها" },
        {39 , "دوا، جنسی" },
        {40 , "او تا لیز" },
        {41 , "حامد" },
        {42 , "تئوری" },
        {43 , "دو سانتی" },
        {44 , "سرو کله اش" },
        {45 , "این آرمی است" },
        {46 , "پرده هایی که" },
        {47 , "و نیش" },
          {48 , "ترددشان" },
        {49 , "روی ریل" },
        {50 , "بردن" },
        {51 , "کم پوست" },
        {52 , "ما یجورایی" },
        {53 , "اصلا موبایل" },
        {54 , "عکس پل روی" },
        {55 , "توپی که" },
        {56 , "دو بیت" },
        {57 , "او وعده داد" },
        {58 , "بروید به" },
        {59 , "روی فرم" },
          {60 , "آبرویشان" },
        {61 , "دو اتیکت" },
        {62 , "دو فاکتور" },
        {63 , "این پلویی" },
        {64 , "نقل کتاب" },
        {65 , "دو سیب" },
        {66 , "آن دو بتول" },
        {67 , "پاپ لری" },
        {68 , "دروغ" },
        {69 , "کلی اینترنت" },
        {70 , "کمپرسی" },
        {71 , "دو فرد" },
          {72 , "پوست پونه" },
        {73 , "که آن سنت" },
        {74 , "مسیح" },
        {75 , "کپسول" },
        {76 , "رزرو" },
        {77 , "دین انسان" },
        {78 , "اونی که" },
        {79 , "تورنتوی" },
        {80 , "روی سنت" },
        {81 , "مالی است" },
        {82 , "گلویم" },
        {83 , "آن فرصت" },
          {84 , "اگر جرات داری" },
        {85 , "یک موتور" },
        {86 , "میدی یا که" },
        {87 , "واریته" },
        {88 , "ولی" },
        {89 , "سر واوی" },
        {90 , "ورد" },
        {91 , "پر روی مین" },
        {92 , "سیگاری" },
        {93 , "بال کی" },
        {94 , "رو لاک" },
        {95 , "آب ویروسی" },
          {96 , "وسط نه" },
        {97 , "سن طوری که" },
        {98 , "رگ" },
        {99 , "دو کمد" },
        {100 , "کنکور" },
        {101 , "ایشان دیده عیب" },
        {102 , "راضی است" },
        {103 , "لکه" },
        {104 , "یک نوری" },
        {105 , "چالش" },
        {106 , "مینیاتوری" },
        {107 , "سس" },
          {108 , "عکس سیل" },
        {109 , "فومن" },
        {110 , "مانتو" },
        {111 , "کمپوت" },
        {112 , "دریده" },
        {113 , "مسئولین" },
        {114 , "مینی است" },
        {115 , "تا ندانستن" },
        {116 , "آن درستی ما که" },
        {117 , "و یک توریست" },
        {118 , "نام روس" },
        {119 , "فلاسک" },
          {120 , "یک ویدئو" },
        {121 , "سال تاری" },
        {122 , "ویژه" },
        {123 , "فری کنترل" },
        {124 , "گلیم سپس" },
        {125 , "رو کانتینر" },
        {126 , "دهکده" },
        {127 , "حساسیت" },
        {128 , "آب سرد" },
        {129 , "کافی بود که" },
        {130 , "مینویی" },
        {131 , "فکرشان" },
          {132 , "اگر نای تو" },
        {133 , "یک بالش" },
        {134 , "اربعین" },
        {135 , "با پولشان" },
        {136 , "فرانک" },
        {137 , "پول تو" },
        {138 , "روال" },
        {139 , "پر هیبت" },
        {140 , "اورژانس" },
        {141 , "جاده کویت" },
        {142 , "دیروز" },
        {143 , "اردبیل" },
          {144 , "فامیل" },
        {145 , "عده ای طوری" },
        {146 , "دیوار" },
        {147 , "جور عالیست" },
        {148 , "کم انسی" },
        {149 , "گلیمی" },
        {150 , "هیزی" },
        {151 , "پرسید" },
        {152 , "وصال" },
        {153 , "آب سر وان" },
        {154 , "میگیرد" },
        {155 , "ایده نفتی" },
          {156 , "به ویل و درید" },
        {157 , "به رول" },
        {158 , "برو توله" },
        {159 , "دو پلو کته" },
        {160 , "آب و نان" },
        {161 , "را ول" },
        {162 , "سر راست" },
        {163 , "آن را در دیگ" },
        {164 , "آن رولی" },
        {165 , "وحشی" },
        {166 , "وای لنت" },
        {167 , "ول" },
          {168 , "حالتر" },
        {169 , "کجول" },
        {170 , "عکس پند" },
        {171 , "پر، چون نت" },
        {172 , "این و تور" },
        {173 , "ما جوری" },
        {174 , "پایینی" },
        {175 , "به لج" },
        {176 , "پر سو" },
        {177 , "ریواس" },
        {178 , "سی کرد" },
        {179 , "یونان و مصر" },
          {180 , "سیلندر" },
        {181 , "سور پس" },
        {182 , "وسط" },
        {183 , "دو بت" },
        {184 , "که پاستیله" },
        {185 , "پین که ترکید" },
        {186 , "پرس کرد" },
        {187 , "عه کورید" },
        {188 , "میکروسکوپ" },
        {189 , "قرائت فال" },
        {190 , "کاش یوسف" },
        {191 , "کناف دینت" },
          {192 , "اپل" },
        {193 , "عده ای که" },
        {194 , "وری" },
        {195 , "این وری" },
        {196 , "مس فوری تن" },
        {197 , "آید" },
        {198 , "طوری چید" },
        {199 , "که چیز" },
        {200 , "نورش" },
        {201 , "هر شی" },
        {202 , "که آن طیف" },
        {203 , "آب طالبی" },
          {204 , "تراژدی" },
        {205 , "پیداست ژیان" },
        {206 , "گران است" },
        {207 , "بادگیر" },
        {208 , "نیم بیل" },
        {209 , "مانی پولاتو" },
        {210 , "رک و لوس" },
        {211 , "هارید" },
        {212 , "ریو" },
        {213 , "نکونامی کلا" },
        {214 , "لو بری کته" },
        {215 , "این جنی است" },
          {216 , "هار است" },
        {217 , "ابا ندارد" },
        {218 , "انیسی" },
        {219 , "کل کل هایشان" },
        {220 , "آب زوری" },
        {221 , "ایست موتور" },
        {222 , "مرسل" },
        {223 , "کو تا" },
        {224 , "تریت" },
        {225 , "بنی" },
        {226 , "پنکه" },
        {227 , "آبروی پریست که" },
          {228 , "هرج و مرج" },
        {229 , "جا قید" },
        {230 , "لنگر" },
        {231 , "آن موشی" },
        {232 , "کر آفتی" },
        {233 , "دفاع" },
        {234 , "فیگور" },
        {235 , "پرش" },
        {236 , "فر آجیل" },
        {237 , "کاپوت" },
        {238 , "پر و سپر" },
        {239 , "دیوار" },
          {240 , "پولی" },
        {241 , "وری" },
        {242 , "کل باید" },
        {243 , "که آن فرم" },
        {244 , "وری فی ها" },
        {245 , "آن طی سی پک" },
        {246 , "دل ما" },
        {247 , "دی تور" },
        {248 , "مریت" },
        {249 , "ترانس می توانست" },
        {250 , "ریلی و" },
        {251 , "با فعل" },
          {252 , "وردنه" },
        {253 , "اکنون لج کرده" },
        {254 , "جاست که" },
        {255 , "دلیر کنت" },
        {256 , "دید پریوش" },
        {257 , "سپاس" },
        {258 , "وکیشن" },
        {259 , "آن اصطبل" },
        {260 , "حامی سایت" },
        {261 , "پینه لایه زیر" },
        {262 , "بنفشه ای" },
        {263 , "ریژک" },
          {264 , "ریپ که طایل" },
        {265 , "ریلی" },
        {266 , "عکس بیتی" },
        {267 , "پرسید" },
        {268 , "پر گشودن" },
        {269 , "عکس تراکت" },
        {270 , "پیرارسال" },
        {271 , "انبردست" },
        {272 , "والی نت" },
        {273 , "پارسال" },
        {274 , "فربد" },
        {275 , "حلاجی کار" },
          {276 , "فی ارث" },
        {277 , "دیده است" },
        {278 , "اسیر" },
        {279 , "اسکل" },
        {280 , "این کور اگر" },
        {281 , "که آن سی در" },
        {282 , "ور، مین" },
        {283 , "ویل" },
        {284 , "سمبل" },
        {285 , "او تاریکی" },
        {286 , "نیتش را" },
        {287 , "تو را فعلا" },
          {288 , "مات منی" },
        {289 , "با گیجی" },
        {290 , "اسکندر" },
        {291 , "عیب رود" },
        {292 , "فوجی، تیو" },
        {293 , "کلام تو" },
        {294 , "پول پر" },
        {295 , "این وری" },
        {296 , "پروسه ای که" },
        {297 , "بی غمیه" },
        {298 , "کلا پس از" },
        {299 , "عار که نیست" },
          {300 , "پای سیبل" },
        {301 , "کم پول" },
        {302 , "او که ورد" },
        {303 , "فنچی" },
        {304 , "او سم" },
        {305 , "قید" },
        {306 , "که فنچ" },
        {307 , "بهتری" },
        {308 , "بهتری" },
        {309 , "پاس فی" },
        {310 , "رئیس باند" },
        {311 , "بکن" },
          {312 , "دیسک پایت" },
        {313 , "دیس ریخت" },
        {314 , "برایش" },
        {315 , "را پیدا" },
        {316 , "عکس اوست" },
        {317 , "سوری تو" },
        {318 , "فیبر" },
        {319 , "یون هایت" },
        {320 , "سوسیس" },
        {321 , "سر رفتی" },
        {322 , "ما یه ذره" },
        {323 , "منا را که" },
          {324 , "او تلو تلو" },
        {325 , "پری مرد" },
        {326 , "آن در نور خورشید" },
        {327 , "ایل استراحت" },
        {328 , "دیس که لوز" },
        {329 , "عکس سه سیب" },
        {330 , "دیزی آستر" },
        {331 , "سنسور" },
        {332 , "کال، پری" },
        {333 , "جیوه، نای" },
        {334 , "بیت" },
        {335 , "این سیستم" },
          {336 , "تو یل" },
        {337 , "بلان در" },
        {338 , "دیز" },
        {339 , "موری اند" },
        {340 , "سوبسید" },
        {341 , "ماییم" },
        {342 , "کم پیراهن" },
        {343 , "کمند" },
        {344 , "فینال" },
        {345 , "عکس و مپ" },
        {346 , "و این" },
        {347 , "ریپیتشان" },
          {348 , "دیشب پاکتی" },
        {349 , "مور طالع" },
        {350 , "نوول" },
        {351 , "آکبند" },
        {352 , "دپو اینترنتی" },
        {353 , "کوتری" },
        {354 , "سایت" },
        {355 , "کوت" },
        {356 , "و ارث" },
        {357 , "مور عالی ترین" },
        {358 , "روم " },
        {359 , "یک تراکتی" },
          {360 , "کمی آن طرف تر" },
        {361 , "که این و آن را" },
        {362 , "آی دل" },
        {363 , "آی دل" },
        {364 , "ژست" },
        {365 , "پیت ریخت" },
        {366 , "دیس پوت" },
        {367 , "والور" },
        {368 , "لو نده، تیک" },
        {369 , "و این" },
        {370 , "آن وانت فول" },
        {371 , "فر طایل" },
          {372 , "ریف اگر" },
        {373 , "استرس" },
        {374 , "دامنش" },
        {375 , "ماکسیمم" },
        {376 , "فله ای" },
        {377 , "وانی ربل" },
        {378 , "سگ نفایه" },
        {379 , "مثل اوج" },
        {380 , "کالی اگر" },
        {381 , "تور، منت" },
        {382 , "پرو آید" },
        {383 , "ولو علتی" },
          {384 , "والن، تیر" },
        {385 , "پره جداست" },
        {386 , "شر ایلی" },
        {387 , "جالی" },
        {388 , "کویتی" },
        {389 , "هندی را" },
        {390 , "لک چرا" },
        {391 , "آب است" },
        {392 , "منبل" },
        {393 , "میو تا" },
        {394 , "وادی" },
        {395 , "را طین" },
          {396 , "کاندیدها" },
        {397 , "پرسید که" },
        {398 , "عادل هستند" },
        {399 , "کو این جوک آشنا" },
        {400 , "رادیکالی" },
        {401 , "اسبان، طینوث" },
        {402 , "سکم" },
        {403 , "واکسن هایتان" },
        {404 , "آن تاییدی" },
        {405 , "او تنسیل" },
        {406 , "سن ستی و" },
        {407 , "تم پیرش" },
          {408 , "واگو" },
        {409 , "اولویت" },
        {410 , "لات ری" },
        {411 , "پای نان که" },
        {412 , "آب تنی" },
        {413 , "سی نما" },
        {414 , "ایوانت" },
        {415 , "دیس، کارد" },
        {416 , "سور" },
        {417 , "سابی، سکونت" },
        {418 , "ریلیت" },
        {419 , "استیشن آری" },
          {420 , "پرآمپر" },
        {421 , "هستی" },
        {422 , "اسکورتی" },
        {423 , "تم پست" },
        {424 , "سوت" },
        {425 , "سیم و پاستیل" },
        {426 , "ریدیم" },
        {427 , "ریزوم" },
        {428 , "هارمونی" },
        {429 , "نفرین" },
        {430 , "ائل گلی" },
        {431 , "نار، کتی که" },
          {432 , "هر" },
        {433 , "ما جستی که" },
        {434 , "دوی این دلت" },
        {435 , "سر پلیس" },
        {436 , "ترا تور" },
        {437 , "دلی برات" },
        {438 , "و آن دل" },
        {439 , "درایت" },
        {440 , "نباید" },
        {441 , "یونی وار" },
        {442 , "سامیت" },
        {443 , "هید" },
          {444 , "با یک گرافیک" },
        {445 , "درنک" },
        {446 , "سوارم" },
        {447 , "وابل" },
        {448 , "توی ملت" },
        {449 , "نیل" },
        {450 , "دجی که له" },
        {451 , "او به دینت" },
        {452 , "رسید" },
        {453 , "تا یک رانت" },
        {454 , "چاره تو" },
        {455 , "ور دیکته" },
          {456 , "آن ارث" },
        {457 , "دپارتمان" },
        {458 , "کو این صاید" },
        {459 , "که آن سیل" },
        {460 , "دختر" },
        {461 , "لجی، بله" },
        {462 , "پلاکارد" },
        {463 , "که این تگیست" },
        {464 , "کولرچی" },
        {465 , "کاست تا مری" },
        {466 , "تو را نسپارنت" },
        {467 , "سکالید" },
          {468 , "اپیدمیک" },
        {469 , "آبی و صورتی" },
        {470 , "مگر نفی" },
        {471 , "کار با تراکتور" },
        {472 , "آب است تا کله" },
        {473 , "و این تیلر" },
        {474 , "جو پرداز" },
        {475 , "نگاه تو" },
        {476 , "پیشین" },
        {477 , "وای تل" },
        {478 , "میان سه پل" },
        {479 , "او را لکنت" },
          {480 , "کیم پلاسند" },
        {481 , "واسه پول" },
        {482 , "را بی لیته" },
        {483 , "پاترول" },
        {484 , "ورد کال" },
        {485 , "مالتی تو ده" },
        {486 , "نا امیدت" },
        {487 , "پوتین و شال" },
        {488 , "مرغ" },
        {489 , "پر او که پایید" },
        {490 , "آب خالص تری" },
        {491 , "این دیفرانسیل" },
          {492 , "دومین طین" },
        {493 , "اصناف" },
        {494 , "این دوره" },
        {495 , "راش" },
        {496 , "عکس پوز" },
        {497 , "لجند" },
        {498 , "پان در" },
        {499 , "ریزان" },
        {500 , "دراز تیک" },
        {501 , "و عرف" },
        {502 , "همند" },
        {503 , "بالت" }
         };


    #endregion

    #region private Variables

    private static int iLevel;
    private float currCountdownValue;
    private int iSet;
    int[] Score=new int[21];
    bool[] CheckSetText=new bool[21];
    bool[] CheckSetDict=new bool[21];
    bool[] CheckFullDictRandom=new bool[21];
    bool[] CheckFullCodeMean = new bool[21];
    bool[] CheckDictRandomIsOne = new bool[21];
    private const int Lock = 19;
    private IEnumerator co;

    private const String PpsTrue0 = "PpsTrue0";             private const String PpsTrue1 = "PpsTrue1";             private const String PpsTrue2 = "PpsTrue2";             private const String PpsTrue3 = "PpsTrue3";             private const String PpsTrue4 = "PpsTrue4";             private const String PpsTrue5 = "PpsTrue5";             private const String PpsTrue6 = "PpsTrue6";             private const String PpsTrue7 = "PpsTrue7";             private const String PpsTrue8 = "PpsTrue8";             private const String PpsTrue9 = "PpsTrue9";             private const String PpsTrue10 = "PpsTrue10";             private const String PpsTrue11 = "PpsTrue11";             private const String PpsTrue12 = "PpsTrue12";             private const String PpsTrue13 = "PpsTrue13";             private const String PpsTrue14 = "PpsTrue14";             private const String PpsTrue15 = "PpsTrue15";             private const String PpsTrue16 = "PpsTrue16";             private const String PpsTrue17 = "PpsTrue17";             private const String PpsTrue18 = "PpsTrue18";             private const String PpsTrue19 = "PpsTrue19";             private const String PpsTrue20 = "PpsTrue20";
    private const String PpsFalse0 = "PpsFalse0";           private const String PpsFalse1 = "PpsFalse1";           private const String PpsFalse2 = "PpsFalse2";           private const String PpsFalse3 = "PpsFalse3";           private const String PpsFalse4 = "PpsFalse4";           private const String PpsFalse5 = "PpsFalse5";           private const String PpsFalse6 = "PpsFalse6";           private const String PpsFalse7 = "PpsFalse7";           private const String PpsFalse8 = "PpsFalse8";           private const String PpsFalse9 = "PpsFalse9";           private const String PpsFalse10 = "PpsFalse10";           private const String PpsFalse11 = "PpsFalse11";           private const String PpsFalse12 = "PpsFalse12";           private const String PpsFalse13 = "PpsFalse13";           private const String PpsFalse14 = "PpsFalse14";           private const String PpsFalse15 = "PpsFalse15";           private const String PpsFalse16 = "PpsFalse16";           private const String PpsFalse17 = "PpsFalse17";           private const String PpsFalse18 = "PpsFalse18";           private const String PpsFalse19 = "PpsFalse19";           private const String PpsFalse20 = "PpsFalse20";
    private const String PpsScores0 = "PpsScores0";         private const String PpsScores1 = "PpsScores1";         private const String PpsScores2 = "PpsScores2";         private const String PpsScores3 = "PpsScores3";         private const String PpsScores4 = "PpsScores4";         private const String PpsScores5 = "PpsScores5";         private const String PpsScores6 = "PpsScores6";         private const String PpsScores7 = "PpsScores7";         private const String PpsScores8 = "PpsScores8";         private const String PpsScores9 = "PpsScores9";         private const String PpsScores10 = "PpsScores10";         private const String PpsScores11 = "PpsScores11";         private const String PpsScores12 = "PpsScores12";         private const String PpsScores13 = "PpsScores13";         private const String PpsScores14 = "PpsScores14";         private const String PpsScores15 = "PpsScores15";         private const String PpsScores16 = "PpsScores16";         private const String PpsScores17 = "PpsScores17";         private const String PpsScores18 = "PpsScores18";         private const String PpsScores19 = "PpsScores19";         private const String PpsScores20 = "PpsScores20";
  
    private string PpsTrue, PpsFalse, PpsScores, PpsLock;

    private const String PpsLock1 = "PpsLock1"; private const String PpsLock2 = "PpsLock2"; private const String PpsLock3 = "PpsLock3"; private const String PpsLock4 = "PpsLock4"; private const String PpsLock5 = "PpsLock5"; private const String PpsLock6 = "PpsLock6"; private const String PpsLock7 = "PpsLock7"; private const String PpsLock8 = "PpsLock8"; private const String PpsLock9 = "PpsLock9"; private const String PpsLock10 = "PpsLock10"; private const String PpsLock11 = "PpsLock11"; private const String PpsLock12 = "PpsLock12"; private const String PpsLock13 = "PpsLock13"; private const String PpsLock14 = "PpsLock14"; private const String PpsLock15 = "PpsLock15"; private const String PpsLock16 = "PpsLock16"; private const String PpsLock17 = "PpsLock17"; private const String PpsLock18 = "PpsLock18"; private const String PpsLock19 = "PpsLock19"; private const String PpsLock20 = "PpsLock20";

    MainMenu menu;
    LinksVocabolary sounds;
    #endregion

    #region Awake
    private void Awake()
    {
        menu = gameObject.GetComponentInParent<MainMenu>();
        sounds = GameObject.Find("GameControlerAmator").gameObject.GetComponent<LinksVocabolary>();
    }
    #endregion

    #region Start
    void Start()
    {
        ManageBooleans();
        ManageLockLevels();
    }

    private void ManageLockLevels()
    {
        for (int i = 0; i < 20; i++)
        {
            ChangeObscuredPrefsKey(i+1);
            if (ObscuredPrefs.HasKey(PpsLock))
            {
                if (ObscuredPrefs.GetInt(PpsLock) == 1)
                {
                    ButtonsLevels[i + 1].interactable = true;
                    PanelLock[i].gameObject.SetActive(false);
                }
            }
        }
        iLevel = 0;
    }

    private void ManageBooleans()
    {
        for (int i = 0; i < 21; i++)
        {
            CheckFullDictRandom[i] = false;
            CheckSetText[i] = false;
            CheckSetDict[i] = true;
            CheckDictRandomIsOne[i] = true;
        }
    }
    #endregion

    #region Back to Switch Menu
    public void BackofMenuLevelsAmatortoSwitchMenu()
    {
        menu.PlayBack();
        menu.Faryar.gameObject.SetActive(true);
        menu.GameMenuLevelHolder.gameObject.SetActive(false);
        menu.GameSwitchHolder.gameObject.SetActive(true);
    }
   
    #region Back to MenuLevels
    public void BackofGametoMenuLevels()
    { 
            BackButton.interactable = true;
            if (DictRandom[iLevel].Count > 0)
            {
                DictRandom[iLevel].Clear();
            }
            CheckSetDict[iLevel] = true;
            SetObscuredPrefs(iLevel);
            StopAllCoroutines();
            menu.PlayBack();
            GamePlay.gameObject.SetActive(false);
            menu.GameMenuLevelHolder.gameObject.SetActive(true);
            Table.gameObject.SetActive(false);
            menu.Background.gameObject.SetActive(true);
            TextMean.gameObject.SetActive(false);
            TextCode.gameObject.SetActive(false);
            TextWord.gameObject.SetActive(false);
    }

    public void FalseActiveGameObjects()
    {
        for(int i=0; i<21; i++)
        {
            Text_Score[i].gameObject.SetActive(false);
            Text_Scores[i].gameObject.SetActive(false);
            Text_DictRandomCount[i].gameObject.SetActive(false);
            Text_DictFalse[i].gameObject.SetActive(false);
            Text_DictTrue[i].gameObject.SetActive(false);
            TextDictFalseRTL[i].gameObject.SetActive(false);
            TextDictTrueRTL[i].gameObject.SetActive(false);
            PanelOpenLevel[i].gameObject.SetActive(false);
        }
    }
    public void TrueActiveGaObsiLevel()
    {
            Text_Score[iLevel].gameObject.SetActive(true);
            Text_Scores[iLevel].gameObject.SetActive(true);
            Text_DictRandomCount[iLevel].gameObject.SetActive(true);
            Text_DictFalse[iLevel].gameObject.SetActive(true);
            Text_DictTrue[iLevel].gameObject.SetActive(true);
            PanelOpenLevel[iLevel].gameObject.SetActive(true);
    }

    #endregion

    #region Play Sound
    public void PlayStartSet()
    {
        if (StartSet != null && audioSource != null)
        {
            audioSource.PlayOneShot(StartSet);
        }
    }
    public void PlayTimeOut()
    {
        if (TimeOut != null && audioSource != null)
        {
            audioSource.PlayOneShot(TimeOut);
        }
    }
    #endregion

    #endregion

    #region Click Button Levels

    #region Levels Buttons
    public void Level_1_Button()
    {
        iLevel = 0;
        CheckCreateDicts();
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(0, 24);
        SetActiveFunction();
    }
    public void Level_2_Button()
    {
        iLevel = 1;
        CheckCreateDicts();
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(24, 48);
        SetActiveFunction();
    }
    public void Level_3_Button()
    {
        iLevel = 2;
        CheckCreateDicts();
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(48, 72);
        SetActiveFunction();
    }
    public void Level_4_Button()
    {
        iLevel = 3;
        CheckCreateDicts();
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(72, 96);
        SetActiveFunction();
    }
    public void Level_5_Button()
    {
        iLevel = 4;
        CheckCreateDicts();
        SetActiveFunction();
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(96, 120);
    }
    public void Level_6_Button()
    {
        iLevel = 5;
        CheckCreateDicts();
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(120, 144);
        SetActiveFunction();
    }
    public void Level_7_Button()
    {
        iLevel = 6;
        CheckCreateDicts();
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(144, 168);
        SetActiveFunction();
    }
    public void Level_8_Button()
    {
        iLevel = 7;
        CheckCreateDicts();
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(168, 192);
        SetActiveFunction();
    }
    public void Level_9_Button()
    {
        iLevel = 8;
        CheckCreateDicts();
      
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(192, 216);
        SetActiveFunction();
    }
    public void Level_10_Button()
    {
        iLevel = 9;
        CheckCreateDicts();
        SetActiveFunction();
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(216, 240);
    }
    public void Level_11_Button()
    {
        iLevel = 10;
        CheckCreateDicts();
       
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(240, 264);
        SetActiveFunction();
    }
    public void Level_12_Button()
    {
        iLevel = 11;
        CheckCreateDicts();
      
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(264, 288);
        SetActiveFunction();
    }
    public void Level_13_Button()
    {
        iLevel = 12;
        CheckCreateDicts();

        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(288, 312);
        SetActiveFunction();
    }
    public void Level_14_Button()
    {
        iLevel = 13;
        CheckCreateDicts();

        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(312, 336);
        SetActiveFunction();
    }
    public void Level_15_Button()
    {
        iLevel = 14;
        CheckCreateDicts();

        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(336, 360);
        SetActiveFunction();
    }
    public void Level_16_Button()
    {
        iLevel = 15;
        CheckCreateDicts();
        SetActiveFunction();
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(360, 384);
    }
    public void Level_17_Button()
    {
        iLevel = 16;
        CheckCreateDicts();
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(384, 408);
        SetActiveFunction();
    }
    public void Level_18_Button()
    {
        iLevel = 17;
        CheckCreateDicts();
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(408, 432);
        SetActiveFunction();
    }
    public void Level_19_Button()
    {
        iLevel = 18;
        CheckCreateDicts();
        SetActiveFunction();
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(432, 456);
    }
    public void Level_20_Button()
    {
        iLevel = 19;
        CheckCreateDicts();
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(456, 480);
        SetActiveFunction();
    }
    public void Level_21_Button()
    {
        iLevel = 20;
        CheckCreateDicts();
        if (DictRandom[iLevel].Count == 0)
            CreateRandomDic(480, 504);
        SetActiveFunction();
    }
    #endregion

    #region UnLockPanels And Active Buttons 
    public void UnLockNextLevelAmator()
    {
        menu.PlayClick();
        RepeatPanel.gameObject.SetActive(false);
        BackofGametoMenuLevels();
        if (iLevel < 20)
        {
            ChangeObscuredPrefsKey(iLevel+1);
            ObscuredPrefs.SetInt(PpsLock, 1);
            ObscuredPrefs.Save();
            ButtonsLevels[iLevel + 1].interactable = true;
            PanelLock[iLevel].gameObject.SetActive(false);
            ButtonsLevels[iLevel + 1].onClick.Invoke();
        }
        menu.PlayClick();
    }
    #endregion

    private void SetActiveFunction()
    {
        FalseActiveGameObjects();
        TrueActiveGaObsiLevel();
        menu.PlayClick();

        Text_Timer.text = "20";
        Text_Levels1.text = (iLevel + 1).ToString();
        Text_Levels2.text = (iLevel + 1).ToString();

        RepeatPanel.gameObject.SetActive(false);
        GamePlay.gameObject.SetActive(true);
        menu.GameMenuLevelHolder.gameObject.SetActive(false);
        Table.gameObject.SetActive(true);
        menu.Background.gameObject.SetActive(false);
        TextWord.gameObject.SetActive(false);

        if (DictRandom[iLevel].Count > 0)
        {
            Text_Score[iLevel].text = Score[iLevel].ToString();
        }
        else if (DictRandom[iLevel].Count == 0)
        {
            Text_Score[iLevel].text = "";
            Text_DictRandomCount[iLevel].text = "";
        }
        
        if (DictRandom[iLevel].Count == 24)
        {
            StartGameButton.gameObject.SetActive(true);
            SetTextButton.gameObject.SetActive(false);
        }
        else
        {
            StartGameButton.gameObject.SetActive(false);
            SetTextButton.gameObject.SetActive(true);
        }
        GetObscuredPrefsResult(iLevel);
    }

    private void CheckCreateDicts()
    {
        if (DictRandom[iLevel] == null)
        {
            DictRandom[iLevel] = new Dictionary<int, string>();
        }
        if (DictTrue[iLevel] == null)
        {
            DictTrue[iLevel] = new Dictionary<int, string>();
        }
        if (DictFalse[iLevel] == null)
        {
            DictFalse[iLevel] = new Dictionary<int, string>();
        }
    }

    private void CreateRandomDic(int min, int max)
    {

        System.Random r = new System.Random();

        for (int i = 0; i < 200; i++)
        {
            int randNum = r.Next(min, max);
            if (!DictRandom[iLevel].Keys.Contains(WordDic.ElementAt(randNum).Key))
                DictRandom[iLevel].Add(WordDic.ElementAt(randNum).Key, WordDic.ElementAt(randNum).Value);
        }
        CheckFullDictRandom[iLevel] = true;
    }
    #endregion

    #region Set Random Text to Jorchin

    public void StartGame()
    {
        ChangeObscuredPrefsKey(iLevel);
        if (IntParseFast(ObscuredPrefs.GetString(PpsScores)) > Lock)
        {
            OpenPanelRepeat();
        }
        else
        {
            RepeatLevelButton();
            StartGameButton.gameObject.SetActive(false);
            SetTextButton.gameObject.SetActive(true);
            Text_Score[iLevel].text = "0";
        }
    }

    private void SetTextFunction()
    {
        if (CheckDictRandomIsOne[iLevel] == true)
        {
            if (CheckFullDictRandom[iLevel] == true)
            {
                Text_DictRandomCount[iLevel].text = DictRandom[iLevel].Count.ToString();               
                TextMean.gameObject.SetActive(true);
                TextCode.gameObject.SetActive(true);            
                TextWord.gameObject.SetActive(true);
               
                if (DictRandom[iLevel].Count > 0 )
                {
                    if (CheckSetDict[iLevel] == true)
                    {
                            CodeJorchin.GetComponent<Animator>().enabled = true;
                            MeanJorchin.GetComponent<Animator>().enabled = true;
                            CodeJorchin.GetComponent<Animator>().Play("Code_jorchin");
                            MeanJorchin.GetComponent<Animator>().Play("Persion_jorchin");
                                          
                            WordJorchin.GetComponent<Animator>().enabled = true;
                            WordJorchin.GetComponent<Animator>().Play("Word_Jorchin");
                           

                            PlayStartSet();
                            CheckSetText[iLevel] = true;
                            co = Countdown();
                            StopAllCoroutines();
                            StartCoroutine(co);
                            System.Random r = new System.Random();
                            int random = r.Next(0, DictRandom[iLevel].Count);
                            int i = DictRandom[iLevel].Keys.ElementAt(random);
                            iSet = i;

                            TextCode.text = CodeDic.ElementAt(i).Value;
                            TextMean.text = MeanDic.ElementAt(i).Value;
                           
                            CheckFullCodeMean[iLevel] = true;
                            TextWord.text = "";
                            if (DictRandom[iLevel].Count == 1)
                            {
                                CheckDictRandomIsOne[iLevel] = false;
                            }
                            DictRandom[iLevel].Remove(i);
                            CheckSetDict[iLevel] = false;
                            if (DictRandom[iLevel].Count == 0 && currCountdownValue > 0)
                            {
                              BackButton.interactable = false;
                            }
                            else
                            {
                              BackButton.interactable = true;
                            }
                    }
                    else if (CheckSetDict[iLevel] == false)
                    {
                        if (CheckFullCodeMean[iLevel] == true)
                        {
                            SetDictFalse();
                            CheckSetDict[iLevel] = true;
                            SetTextFunction();
                        }
                    }
                }
             
                else if (DictRandom[iLevel].Count == 0)
                {
                    StopCoroutine(co);
                    Text_Timer.text = "0";
                    CheckFullDictRandom[iLevel] = false;
                    SetObscuredPrefs(iLevel);
                    TextWord.gameObject.SetActive(false);
                    TextWord.text = "";
                    TextCode.text = "";
                    TextMean.text = "";
                    CheckFullCodeMean[iLevel] = false;
                    SetTextFunction();
                }
            }
            else if (CheckFullDictRandom[iLevel] == false)
            {
                OpenPanelRepeat();
            }
        }
    }

    private void OpenPanelRepeat()
    {
        RepeatPanel.gameObject.SetActive(true);
        ChangeObscuredPrefsKey(iLevel);
        if (IntParseFast(ObscuredPrefs.GetString(PpsScores)) > Lock)
        {
            PanelOpenLevel[iLevel].gameObject.SetActive(false);
        }
        if (iLevel == 20)
        {
            ButtonNextLevel.gameObject.SetActive(false);
            for (int i = 0; i < 21; i++)
            {
                PanelOpenLevel[i].gameObject.SetActive(false);
            }
        }
    }

    public static int IntParseFast(string value)
    {
        int result = 0;
        for (int i = 0; i < value.Length; i++)
        {
            char letter = value[i];
            result = 10 * result + (letter - 48);
        }
        return result;
    }

    public void RepeatLevelButton()
    {
        menu.PlayClick();
        if (ObscuredPrefs.HasKey(PpsScores))
        {
          ChangeObscuredPrefsKey(iLevel);
          ObscuredPrefs.DeleteKey(PpsTrue);
          ObscuredPrefs.DeleteKey(PpsFalse);
          ObscuredPrefs.DeleteKey(PpsScores);
          DictFalse[iLevel].Clear();
          DictTrue[iLevel].Clear();
        }
        Text_DictRandomCount[iLevel].text = null;
        Text_Scores[iLevel].text = null;
        Text_DictFalse[iLevel].text = null;
        Text_DictTrue[iLevel].text = null;
        TextDictFalseRTL[iLevel].text = null;
        TextDictTrueRTL[iLevel].text = null;
        BackofGametoMenuLevels();
        ButtonsLevels[iLevel].onClick.Invoke();
        Score[iLevel] = 0;
        CheckFullDictRandom[iLevel] = true;
    }

    public IEnumerator Countdown(float countdownValue = 20)
    {

        currCountdownValue = countdownValue;
        while (currCountdownValue >= 0)
        {
            Text_Timer.text = currCountdownValue.ToString();
            yield return new WaitForSeconds(1.0f);
            currCountdownValue--;
        }
        if (currCountdownValue < 0)
        {
            CodeJorchin.GetComponent<Animator>().enabled = false;
            MeanJorchin.GetComponent<Animator>().enabled = false;
            WordJorchin.GetComponent<Animator>().enabled = false;

            PlayTimeOut();
            StopCoroutine(co);
            CheckSetText[iLevel] = false;
           
            SetDictFalse();
            SetObscuredPrefs(iLevel);
            TextMean.gameObject.SetActive(false);
            TextCode.gameObject.SetActive(false);
            TextWord.gameObject.SetActive(false);
            BackButton.interactable = true;
        }

    }

    public void SetText()
    {
        SetTextFunction();
    }
    #endregion

    #region Check Jorchin Button

    public void CheckButton()
    {
        if (CheckSetText[iLevel] == true)
        {
                if (TextWord.text.ToLower() == WordDic.ElementAt(iSet).Value.ToLower())
                {
                    CodeJorchin.GetComponent<Animator>().Play("OkCode_Jorchin");
                    MeanJorchin.GetComponent<Animator>().Play("OkPersion_Jorchin");
                    WordJorchin.GetComponent<Animator>().Play("OkWord_Jorchin");

                    sounds.PlaySounds(sounds.WordsClip[iSet]);
                    StopCoroutine(co);
                    SetDictTrue();
                   
                    Score[iLevel] += 1;
                    Text_Score[iLevel].text = Score[iLevel].ToString();
                    if (Score[iLevel] != 0)
                    {
                        Text_Scores[iLevel].text = Text_Score[iLevel].text.ToString();
                    }
                    CheckSetText[iLevel] = false;
                    SetObscuredPrefs(iLevel);
                    BackButton.interactable = true;

                }
                else
                {
                    if (currCountdownValue > 0)
                    {
                        CodeJorchin.GetComponent<Animator>().Play("Code_jorchin");
                        MeanJorchin.GetComponent<Animator>().Play("Persion_jorchin");
                        WordJorchin.GetComponent<Animator>().Play("Word_Jorchin");

                        PlayStartSet();
                        TextWord.text = "";
                        CheckSetText[iLevel] = true;
                    }
                }
        }
    }

    #region Set Data

    public void SetDictTrue()
    {
        if (DictRandom[iLevel].Count >= 0)
        {
            if (!DictTrue[iLevel].Keys.Contains(WordDic.ElementAt(iSet).Key))
            {
                DictTrue[iLevel].Add(WordDic.ElementAt(iSet).Key, WordDic.ElementAt(iSet).Value);
            }
            CheckSetDict[iLevel] = true;
            CheckDictRandomIsOne[iLevel] = true;
        }
    }

    public void SetDictFalse()
    {
        if (DictRandom[iLevel].Count >= 0)
        {
            if (!DictFalse[iLevel].Keys.Contains(WordDic.ElementAt(iSet).Key))
            {
                DictFalse[iLevel].Add(WordDic.ElementAt(iSet).Key, WordDic.ElementAt(iSet).Value);
            }
            CheckSetDict[iLevel] = true;
            CheckDictRandomIsOne[iLevel] = true;
        }
    }

    #endregion

    #endregion

    #region Panel Result Levels 

    public void PrintResult()
    {
        menu.PlayClick();
        ResultPanel.gameObject.SetActive(true);
        SetTextPrint();
    }

    private void SetTextPrint()
    {
        ChangeObscuredPrefsKey(iLevel);
        Text_Levels1.text = (iLevel + 1).ToString();
        Text_Scores[iLevel].text = ObscuredPrefs.GetString(PpsScores).ToString();
        if (DictRandom[iLevel].Count >= 0)
        {
            if (DictTrue[iLevel].Count != 0 && ObscuredPrefs.HasKey(PpsScores))
            {
                foreach (KeyValuePair<int, string> pair in DictTrue[iLevel])
                {
                    if (!Text_DictTrue[iLevel].text.Contains(pair.Value.ToLower()))
                    {
                        Text_DictTrue[iLevel].text += string.Format("{0}\n", pair.Value.ToLower());
                    }
                }
            }
            else if (ObscuredPrefs.HasKey(PpsFalse) && DictTrue[iLevel].Count == 0 && DictFalse[iLevel].Count == 24)
            {
                TextDictTrueRTL[iLevel].gameObject.SetActive(true);
                TextDictTrueRTL[iLevel].text = "بدون مطالعه\nبازی نکن";
            }

            if (DictFalse[iLevel].Count != 0 && ObscuredPrefs.HasKey(PpsScores))
            {
                foreach (KeyValuePair<int, string> pair in DictFalse[iLevel])
                {
                    if (!Text_DictFalse[iLevel].text.Contains(pair.Value.ToLower()))
                    {
                        Text_DictFalse[iLevel].text += string.Format("{0}\n", pair.Value.ToLower());
                    }
                }
            }
            else if (ObscuredPrefs.HasKey(PpsTrue) && DictFalse[iLevel].Count == 0 && DictTrue[iLevel].Count == 24)
            {
                TextDictFalseRTL[iLevel].gameObject.SetActive(true);
                TextDictFalseRTL[iLevel].text = "فوق العاده بود\nهزار آفرین";
            }

            SetObscuredPrefs(iLevel);

            GetObscuredPrefsResult(iLevel);
        }
    }

    #endregion

    #region Sava Data

    private void ChangeObscuredPrefsKey(int i)
    {
        switch (i)
        {
            case 0:
                PpsTrue = PpsTrue0;
                PpsFalse = PpsFalse0;
                PpsScores = PpsScores0;
                break;
            case 1:
                PpsTrue = PpsTrue1;
                PpsFalse = PpsFalse1;
                PpsScores = PpsScores1;
                PpsLock = PpsLock1;
                break;
            case 2:
                PpsTrue = PpsTrue2;
                PpsFalse = PpsFalse2;
                PpsScores = PpsScores2;
                PpsLock = PpsLock2;
                break;
            case 3:
                PpsTrue = PpsTrue3;
                PpsFalse = PpsFalse3;
                PpsScores = PpsScores3;
                PpsLock = PpsLock3;
                break;
            case 4:
                PpsTrue = PpsTrue4;
                PpsFalse = PpsFalse4;
                PpsScores = PpsScores4;
                PpsLock = PpsLock4;
                break;
            case 5:
                PpsTrue = PpsTrue5;
                PpsFalse = PpsFalse5;
                PpsScores = PpsScores5;
                PpsLock = PpsLock5;
                break;
            case 6:
                PpsTrue = PpsTrue6;
                PpsFalse = PpsFalse6;
                PpsScores = PpsScores6;
                PpsLock = PpsLock6;
                break;
            case 7:
                PpsTrue = PpsTrue7;
                PpsFalse = PpsFalse7;
                PpsScores = PpsScores7;
                PpsLock = PpsLock7;
                break;
            case 8:
                PpsTrue = PpsTrue8;
                PpsFalse = PpsFalse8;
                PpsScores = PpsScores8;
                PpsLock = PpsLock8;
                break;
            case 9:
                PpsTrue = PpsTrue9;
                PpsFalse = PpsFalse9;
                PpsScores = PpsScores9;
                PpsLock = PpsLock9;
                break;
            case 10:
                PpsTrue = PpsTrue10;
                PpsFalse = PpsFalse10;
                PpsScores = PpsScores10;
                PpsLock = PpsLock10;
                break;
            case 11:
                PpsTrue = PpsTrue11;
                PpsFalse = PpsFalse11;
                PpsScores = PpsScores11;
                PpsLock = PpsLock11;
                break;
            case 12:
                PpsTrue = PpsTrue12;
                PpsFalse = PpsFalse12;
                PpsScores = PpsScores12;
                PpsLock = PpsLock12;
                break;
            case 13:
                PpsTrue = PpsTrue13;
                PpsFalse = PpsFalse13;
                PpsScores = PpsScores13;
                PpsLock = PpsLock13;
                break;
            case 14:
                PpsTrue = PpsTrue14;
                PpsFalse = PpsFalse14;
                PpsScores = PpsScores14;
                PpsLock = PpsLock14;
                break;
            case 15:
                PpsTrue = PpsTrue15;
                PpsFalse = PpsFalse15;
                PpsScores = PpsScores15;
                PpsLock = PpsLock15;
                break;
            case 16:
                PpsTrue = PpsTrue16;
                PpsFalse = PpsFalse16;
                PpsScores = PpsScores16;
                PpsLock = PpsLock16;
                break;
            case 17:
                PpsTrue = PpsTrue17;
                PpsFalse = PpsFalse17;
                PpsScores = PpsScores17;
                PpsLock = PpsLock17;
                break;
            case 18:
                PpsTrue = PpsTrue18;
                PpsFalse = PpsFalse18;
                PpsScores = PpsScores18;
                PpsLock = PpsLock18;
                break;
            case 19:
                PpsTrue = PpsTrue19;
                PpsFalse = PpsFalse19;
                PpsScores = PpsScores19;
                PpsLock = PpsLock19;
                break;
            case 20:
                PpsTrue = PpsTrue20;
                PpsFalse = PpsFalse20;
                PpsScores = PpsScores20;
                PpsLock = PpsLock20;
                break;
        }
    }

    public void GetObscuredPrefsResult(int i)
    {
        for ( i = 0; i < 21; i++)
        {
            ChangeObscuredPrefsKey(i);
            Text_DictTrue[i].text = ObscuredPrefs.GetString(PpsTrue).ToString();
            Text_DictFalse[i].text = ObscuredPrefs.GetString(PpsFalse).ToString();
            Text_Scores[i].text = ObscuredPrefs.GetString(PpsScores).ToString();
        }
    }



    public void SetObscuredPrefs(int i)
    {
        for (i = 0; i < 21; i++)
        {
            ChangeObscuredPrefsKey(i);
            ObscuredPrefs.SetString(PpsScores, Text_Scores[i].text);
            ObscuredPrefs.SetString(PpsTrue, Text_DictTrue[i].text);
            ObscuredPrefs.SetString(PpsFalse, Text_DictFalse[i].text);
        }
        ObscuredPrefs.Save();
    }

    public void ResetObscuredPrefsofGame()
    {
        for(int i=0; i<21; i++)
        {
            ChangeObscuredPrefsKey(i);
            ObscuredPrefs.DeleteKey(PpsTrue);
            ObscuredPrefs.DeleteKey(PpsFalse);
            ObscuredPrefs.DeleteKey(PpsScores);
            ObscuredPrefs.DeleteKey(PpsLock);
        }
    }

    private void OnApplicationQuit()
    {
        SetObscuredPrefs(iLevel);
    }

    public void ResetGameAmator()
    {
        menu.PlayClick();
        ResetObscuredPrefsofGame();
        for (int i = 0; i < 20; i++)
        {
            PanelLock[i].gameObject.SetActive(true);
            ButtonsLevels[i+1].interactable = false;
        }
        for (int i = 0; i < 21; i++)
        {
            Text_DictRandomCount[i].text = "";
            Text_Score[i].text = "";
        }
    }

    #endregion

}
